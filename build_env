#!/bin/bash

# This assumes a new venv has been setup
#   virtualenv venv
#   source venv/bin/activate

BDIR=$(cd $(dirname $0) && pwd)

# Instal basic tools as needed
sudo add-apt-repository -y ppa:mc3man/trusty-media
sudo apt-get update
sudo apt-get -y install cmake git wget unzip qt4-default qt5-default

sudo apt-get -y install gfortran

sudo apt-get -y install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler
sudo apt-get -y install --no-install-recommends libboost-all-dev

sudo apt-get -y install libatlas-base-dev

sudo apt-get -y install qt4-default

sudo apt-get -y install libgflags-dev libgoogle-glog-dev liblmdb-dev

sudo apt-get -y install python-pip cython python-numpy python-pandas python-scipy python-skimage python-skimage-lib

sudo apt-get -y install ffmpeg

source venv/bin/activate 

# Grab initial python packages

for p in `cat requirements.txt`; do 
	echo pip install $p
	pip install $p
	if [ $? != 0 ]; then
		echo "Unable to build $p"
		exit
	fi
done

mkdir build
cd build

# Install OpenCV 2.4.11

if [ ! -f opencv-2.4.11.zip ]; then
	wget http://downloads.sourceforge.net/project/opencvlibrary/opencv-unix/2.4.11/opencv-2.4.11.zip
fi
unzip opencv-2.4.11.zip
cd opencv-2.4.11
mkdir release
cd release

cmake -G "Unix Makefiles" -D CMAKE_INSTALL_PREFIX=$BDIR/venv -D CMAKE_CXX_COMPILER=/usr/bin/g++ CMAKE_C_COMPILER=/usr/bin/gcc -D CMAKE_BUILD_TYPE=RELEASE -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D INSTALL_C_EXAMPLES=ON -D INSTALL_PYTHON_EXAMPLES=ON -D BUILD_EXAMPLES=ON -D WITH_QT=ON -D WITH_OPENGL=ON -D BUILD_FAT_JAVA_LIB=ON -D INSTALL_TO_MANGLED_PATHS=ON -D INSTALL_CREATE_DISTRIB=ON -D INSTALL_TESTS=ON -D ENABLE_FAST_MATH=ON -D WITH_IMAGEIO=ON -D BUILD_SHARED_LIBS=ON -D WITH_GSTREAMER=ON -D WITH_CUDA=OFF ..

make all -j 8 
make install


# Install nvcaffe
cd $BDIR

git clone https://github.com/NVIDIA/caffe
cd caffe

# Add CUDNN support

#cat Makefile.config.example | sed 's/.*#.*WITH_PYTHON_LAYER/WITH_PYTHON_LAYER/g' > Makefile.config
cat Makefile.config.example | sed 's/.*#.*USE_CUDNN/USE_CUDNN/g' | \
                              sed 's/.*#.*WITH_PYTHON_LAYER/WITH_PYTHON_LAYER/g' > Makefile.config

make -j all
make -j pycaffe

cd ..
